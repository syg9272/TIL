abstract 정의
- 자손 클래스에서 반드시 재정의해서 사용되기 때문에 조상의 구현이 무의미한 메서드
- 메서드를 선언만 하고 구현부는 생략
- 구현부가 없다는 의미로 abstract 키워드를 메서드 선언부에 추가
- 객체를 생성할 수 없는 클래스라는 의미로 클래스 선언부에 abstract 추가
- 객체를 생성할 수 없지만 다형성 가능
- 구현의 강제 (자손 클래스에서 무조건 재정의 해야함) (안할 경우 컴파일 에러)

Interface
- 최고 수준의 추상화 단계 : 일반 메서드는 모두 abstract 형태
- 모든 멤버변수는 public static final 이며 생략 가능
- 모든 메서드는 public abstract 이며 생략 가능
- 인터페이스끼리는 다중 상속 가능 (헷갈릴 게 없음)
- 인터페이스도 하나의 타입이므로 다형성 가능

- 구현부가 있는 메서드 : 메서드 선언 부에 default 추가 
---> 인터페이스가 추가해야 되는 기능 발생 -> 모든 구현체에서 오버라이드 해야 함
-> default는 abstract가 아니므로 반드시 구현하지 않아도 됨

- 우선 순위 
1. 인터페이스랑 클래스에 동일한 메서드가 있을 경우 클래스 꺼 사용
2. 인터페이스 간 충돌이 일어날 경우 오버라이드 해서 해결

- 인터페이스에서 사용될 수 있는 메서드 : abstract, default, static

Interface의 필요성 
- 구현의 강제로 표준화 처리 -> 손쉬운 모듈 교체 지원
- 서로 상속 관계가 없는 클래스들에게 인터페이스를 통한 관계 부여
- 독립적인 프로그래밍으로 개발 기간 단축

Generic
- 미리 타입 명시해서 형 변환하지 않게 함
- 표현 : <> 에 타입 파라미터 표시
- T : reference Type, E : Element, K : Key, V : value
- 객체를 한정하면 자식까지 가능

